
namespace NitrogenXamarin2.CommonData
{
    public static class SunflowerBaseTables
    {
        private const int sfConvTillDiff = 50;
        private const int sfMinNotillDiff = 20;
        private const int sfLangdonDiff = -40;

        private const int nRow = 17;
        private const int nColumn = 19;

        // sunflower Western Confection Longterm notill
        public static readonly int[,] sfWCL = new int[nRow, nColumn] 
        {
            {86, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 75, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 95, 66, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 86, 61, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 100, 79, 58, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 92, 73, 55, 38, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 102, 85, 69, 53, 38, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 95, 81, 66, 52, 38, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 104, 90, 79, 65, 52, 39, 27, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 100, 88, 73, 63, 51, 39, 28, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 110, 93, 82, 73, 61, 50, 39, 29, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 110, 99, 89, 81, 70, 60, 50, 39, 39, 29, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 110, 105, 95, 88, 78, 68, 58, 49, 49, 39, 11, 0, 0, 0},
    {110, 110, 110, 110, 110, 110, 110, 101, 94, 85, 75, 66, 57, 57, 48, 23, 12, 0, 0},
    {110, 110, 110, 110, 110, 110, 110, 106, 99, 90, 82, 73, 65, 65, 56, 31, 21, 13, 0},
    {110, 110, 110, 110, 110, 110, 110, 110, 106, 95, 89, 81, 73, 73, 65, 40, 32, 24, 17},
    {110, 110, 110, 110, 110, 110, 110, 110, 110, 105, 97, 90, 83, 83, 75, 51, 44, 37, 29}
        };

        // sunflower western-ND oilseed long-term-no-till
        public static readonly int[,] sfWOL = new int[nRow, nColumn]
        {
            {76, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 65, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 85, 56, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 76, 51, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 90, 69, 48, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 82, 63, 45, 28, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 92, 75, 59, 43, 28, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 85, 71, 56, 42, 28, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 94, 80, 69, 55, 42, 29, 17, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 90, 78, 63, 53, 41, 29, 18, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 100, 83, 72, 63, 51, 40, 29, 19, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 100, 89, 79, 71, 60, 50, 40, 29, 29, 19, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 100, 95, 85, 78, 68, 58, 48, 39, 39, 29, 11, 0, 0, 0},
    {100, 100, 100, 100, 100, 100, 100, 91, 84, 75, 65, 56, 47, 47, 38, 23, 12, 0, 0},
    {100, 100, 100, 100, 100, 100, 100, 96, 89, 80, 72, 63, 55, 55, 46, 31, 21, 13, 0},
    {100, 100, 100, 100, 100, 100, 100, 100, 96, 85, 79, 71, 63, 63, 55, 40, 32, 24, 17},
    {100, 100, 100, 100, 100, 100, 100, 100, 100, 95, 87, 80, 73, 73, 65, 51, 44, 37, 29}
        };

        // sunflower eastern-ND confection conventional-tillage
        public static readonly int[,] sfECC = new int[nRow, nColumn]
            {
    {160, 107, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 155, 107, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 145, 107, 69, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 160, 139, 107, 75, 43, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 160, 160, 134, 107, 79, 52, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 160, 160, 155, 131, 107, 83, 59, 24, 11, 0, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 160, 160, 160, 149, 128, 107, 86, 64, 43, 22, 0, 0, 0, 0, 0, 0, 0},
    {160, 160, 160, 160, 160, 160, 145, 126, 107, 88, 68, 49, 30, 11, 0, 0, 0, 0, 0},
    {160, 160, 160, 160, 160, 160, 160, 142, 139, 107, 89, 72, 55, 37, 20, 0, 0, 0, 0},
    {160, 160, 160, 160, 160, 160, 160, 155, 151, 123, 107, 91, 75, 57, 43, 27, 11, 0, 0},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 136, 119, 107, 92, 77, 63, 48, 33, 20, 0},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 148, 134, 120, 107, 93, 79, 64, 52, 38, 25},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 147, 132, 120, 107, 94, 81, 68, 56, 43},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 143, 131, 119, 107, 96, 83, 71, 59},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 152, 141, 129, 118, 107, 96, 84, 73},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 152, 142, 131, 121, 110, 100, 89},
    {160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 155, 144, 136, 126, 116, 107}
};

        // sunflower eastern-ND oilseed conventional-tillage
        public static readonly int[,] sfEOC = new int[nRow, nColumn]
            {
    {150, 135, 124, 111, 96, 84, 72, 59, 47, 35, 23, 12, 0, 0, 0, 0, 0, 0, 0},
    {150, 145, 135, 125, 116, 106, 96, 87, 78, 68, 59, 50, 41, 32, 23, 14, 0, 0, 0},
    {150, 150, 143, 135, 127, 119, 112, 104, 96, 89, 81, 74, 67, 59, 52, 45, 38, 30, 23},
    {150, 150, 148, 141, 135, 128, 126, 115, 109, 103, 96, 90, 84, 78, 72, 65, 59, 53, 47},
    {150, 150, 150, 146, 141, 135, 129, 124, 118, 113, 107, 102, 96, 91, 86, 80, 75, 70, 65},
    {150, 150, 150, 150, 145, 140, 130, 130, 125, 120, 115, 111, 106, 101, 95, 91, 87, 83, 78},
    {150, 150, 150, 150, 148, 144, 135, 135, 131, 126, 122, 118, 113, 109, 105, 102, 96, 92, 88},
    {150, 150, 150, 150, 150, 147, 139, 139, 135, 131, 127, 123, 119, 115, 112, 108, 104, 100, 96},
    {150, 150, 150, 150, 150, 150, 150, 150, 138, 135, 131, 128, 124, 121, 117, 116, 110, 107, 103},
    {150, 150, 150, 150, 150, 150, 150, 150, 142, 138, 135, 132, 128, 125, 122, 119, 115, 112, 109},
    {150, 150, 150, 150, 150, 150, 150, 150, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114},
    {150, 150, 150, 150, 150, 150, 150, 150, 146, 143, 141, 138, 135, 132, 129, 127, 124, 121, 118},
    {150, 150, 150, 150, 150, 150, 150, 150, 148, 145, 143, 140, 138, 135, 132, 130, 127, 124, 122},
    {150, 150, 150, 150, 150, 150, 150, 150, 150, 147, 145, 142, 140, 137, 135, 132, 130, 128, 125},
    {150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 147, 144, 142, 140, 137, 135, 133, 130, 128},
    {150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 146, 144, 142, 140, 138, 136, 134, 131},
    {150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 148, 146, 144, 142, 141, 139, 137, 135}
};

        // sunflower eastern-ND oilseed long-term-no-till
        public static readonly int[,] sfEOL = new int[nRow, nColumn]
            {
    {34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {67, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {89, 47, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 67, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 82, 55, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 92, 69, 45, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 80, 58, 37, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 89, 68, 49, 30, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 95, 76, 60, 40, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 84, 67, 51, 35, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 90, 75, 60, 44, 30, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 96, 81, 67, 53, 39, 25, 12, 12, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 87, 74, 61, 47, 35, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 92, 80, 67, 55, 43, 30, 30, 0, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 97, 85, 73, 61, 50, 38, 38, 16, 0, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 91, 80, 69, 58, 47, 47, 26, 16, 0, 0, 0, 0, 0, 0},
    {100, 100, 100, 100, 100, 97, 87, 77, 67, 57, 57, 38, 28, 18, 10, 0, 0, 0, 0}
};

        // sunflower eastern-ND confection long-term-no-till
        public static readonly int[,] sfECL = new int[nRow, nColumn]
{
    {44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {77, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {99, 57, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 77, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 92, 65, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 102, 79, 55, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 90, 68, 47, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 99, 78, 59, 40, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 105, 86, 70, 50, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 94, 77, 61, 45, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 100, 85, 70, 54, 40, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 106, 91, 77, 63, 49, 35, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 97, 84, 71, 57, 45, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 102, 90, 77, 65, 53, 40, 40, 0, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 107, 95, 83, 71, 60, 48, 48, 26, 0, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 101, 90, 79, 68, 57, 57, 36, 26, 0, 0, 0, 0, 0, 0},
    {110, 110, 110, 110, 110, 107, 97, 87, 77, 67, 67, 48, 38, 28, 20, 0, 0, 0, 0}
};

        // sunflower Western Oilseed Conventional till
        public static readonly int[,] sfWOC = CommonFunctions.GetNewTable(sfWOL, sfConvTillDiff);

        // sunflower Western Confection Conventional till
        public static readonly int[,] sfWCC = CommonFunctions.GetNewTable(sfWOL, sfConvTillDiff);

        //sunflower Western Confection Minimal notill
        public static readonly int[,] sfWCM = CommonFunctions.GetNewTable(sfWCC, sfMinNotillDiff);

        //sunflower Western Oilseed Minimalnotill
        public static readonly int[,] sfWOM = CommonFunctions.GetNewTable(sfWOC, sfMinNotillDiff);

        //sunflower Eastern ConfectionMinimal notill
        public static readonly int[,] sfECM = CommonFunctions.GetNewTable(sfECC, sfMinNotillDiff);

        //sunflower Eastern Oilseed Minimal notill
        public static readonly int[,] sfEOM = CommonFunctions.GetNewTable(sfEOC, sfMinNotillDiff);

        //sunflower Langdon Confection Conventional till
        public static readonly int[,] sfLCC = CommonFunctions.GetNewTable(sfECC, sfLangdonDiff);

        //sunflower Langdon Oilseed Conventional till
        public static readonly int[,] sfLOC = CommonFunctions.GetNewTable(sfEOC, sfLangdonDiff);

        //sunflower Langdon Confection Longterm notill
        public static readonly int[,] sfLCL = CommonFunctions.GetNewTable(sfECL, sfLangdonDiff);

        //sunflower Langdon Oilseed Longterm notill
        public static readonly int[,] sfLOL = CommonFunctions.GetNewTable(sfEOL, sfLangdonDiff);

        //sunflower Langdon Confection Minimal notill
        public static readonly int[,] sfLCM = CommonFunctions.GetNewTable(sfECM, sfLangdonDiff);

        //sunflower Langdon Oilseed Minimal notill
        public static readonly int[,] sfLOM = CommonFunctions.GetNewTable(sfEOM, sfLangdonDiff);

    }
}
