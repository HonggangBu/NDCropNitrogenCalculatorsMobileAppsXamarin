namespace NitrogenXamarin2.CommonData
{
    public static class CornBaseTables
    {
        private const int minNotillDiff = 20;
        private const int longNotillDiff = -50;

        private const int nRow = 11;
        private const int nColumn = 19;


        public static readonly int[,] irrigated = new int[nRow, nColumn]
        {
            {255, 241, 228, 215, 201, 188, 175, 162, 149, 136, 123, 109, 96, 83, 70, 57, 44, 30, 17},
{263, 254, 245, 237, 228, 219, 210, 201, 194, 184, 175, 166, 158, 149, 140, 131, 123, 114, 105},
{268, 262, 256, 250, 244, 238, 232, 226, 220, 208, 201, 195, 188, 183, 175, 169, 162, 155, 149},
{272, 267, 262, 257, 252, 247, 242, 237, 232, 223, 217, 212, 207, 201, 196, 191, 186, 180, 175},
{273, 268, 263, 258, 253, 248, 243, 238, 233, 230, 226, 223, 219, 215, 210, 206, 201, 197, 193},
{274, 269, 264, 259, 254, 249, 244, 239, 234, 231, 227, 225, 223, 221, 218, 216, 213, 209, 205},
{275, 270, 265, 260, 255, 250, 245, 240, 235, 232, 228, 226, 224, 222, 219, 217, 214, 210, 206},
{276, 271, 266, 261, 256, 251, 246, 241, 236, 233, 229, 227, 225, 223, 220, 218, 215, 211, 207},
{277, 272, 267, 262, 257, 252, 247, 242, 237, 234, 230, 228, 226, 224, 221, 219, 216, 212, 208},
{278, 273, 268, 263, 258, 253, 248, 243, 238, 235, 231, 229, 227, 225, 222, 220, 217, 213, 209},
{279, 274, 269, 264, 259, 254, 249, 244, 239, 236, 232, 230, 228, 226, 223, 221, 218, 214, 210}
        };

        public static readonly int[,] langdonConvTill = new int[nRow, nColumn]
                    {{184, 149, 117, 84, 49, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{208, 184, 162, 130, 118, 95, 73, 51, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{218, 202, 183, 167, 150, 133, 117, 100, 83, 67, 50, 33, 17, 0, 0, 0, 0, 0, 0},
{220, 211, 196, 183, 170, 156, 143, 130, 116, 103, 89, 76, 64, 51, 37, 23, 10, 0, 0},
{220, 218, 207, 194, 183, 172, 161, 150, 139, 128, 117, 106, 94, 83, 72, 61, 50, 39, 28},
{220, 220, 213, 203, 193, 182, 173, 164, 155, 145, 136, 127, 116, 107, 98, 88, 79, 69, 60},
{220, 220, 218, 209, 201, 192, 183, 177, 167, 158, 150, 142, 133, 125, 117, 108, 100, 92, 83},
{220, 220, 220, 214, 207, 199, 191, 183, 176, 168, 161, 154, 146, 139, 131, 124, 116, 109, 102},
{220, 220, 220, 218, 211, 204, 198, 192, 183, 177, 171, 163, 157, 152, 143, 137, 130, 123, 117},
{220, 220, 220, 220, 215, 209, 202, 195, 189, 183, 177, 171, 165, 159, 153, 147, 141, 135, 129},
{220, 220, 220, 220, 220, 212, 207, 201, 194, 189, 183, 178, 172, 167, 161, 156, 150, 144, 139}
        };

        public static readonly int[,] centralConvTill = new int[nRow, nColumn]
            {{214, 179, 147, 114, 79, 46, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{238, 214, 192, 170, 148, 125, 103, 81, 62, 37, 14, 0, 0, 0, 0, 0, 0, 0, 0},
{248, 232, 213, 197, 180, 163, 147, 130, 113, 97, 80, 63, 47, 30, 13, 0, 0, 0, 0},
{250, 241, 226, 213, 200, 186, 173, 160, 146, 133, 119, 106, 94, 81, 67, 53, 40, 26, 13},
{250, 248, 237, 224, 213, 202, 191, 180, 169, 158, 147, 136, 124, 113, 102, 91, 80, 69, 58},
{250, 250, 243, 233, 223, 212, 203, 194, 185, 175, 166, 157, 146, 137, 128, 118, 109, 99, 90},
{250, 250, 248, 239, 231, 222, 213, 207, 197, 188, 180, 172, 163, 155, 147, 138, 130, 122, 113},
{250, 250, 250, 244, 237, 229, 221, 213, 206, 198, 191, 184, 176, 169, 161, 154, 146, 139, 132},
{250, 250, 250, 248, 241, 234, 228, 222, 213, 207, 201, 193, 187, 182, 173, 167, 160, 153, 147},
{250, 250, 250, 250, 245, 239, 232, 225, 219, 213, 207, 201, 195, 189, 183, 177, 171, 165, 159},
{250, 250, 250, 250, 248, 242, 237, 231, 224, 219, 213, 208, 202, 197, 191, 186, 180, 174, 169}
};

        public static readonly int[,] eastLongNoTill = new int[nRow, nColumn]
            {{173, 147, 121, 95, 70, 42, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{190, 172, 155, 136, 120, 102, 85, 68, 50, 33, 16, 0, 0, 0, 0, 0, 0, 0, 0},
{200, 187, 173, 161, 148, 134, 121, 108, 95, 82, 69, 55, 44, 31, 17, 0, 0, 0, 0},
{205, 197, 184, 173, 162, 152, 142, 135, 122, 110, 100, 90, 79, 69, 58, 48, 37, 27, 18},
{210, 202, 191, 184, 173, 163, 156, 147, 138, 131, 121, 112, 103, 96, 87, 78, 70, 61, 52},
{212, 204, 197, 190, 182, 173, 165, 158, 151, 143, 136, 128, 121, 113, 106, 99, 91, 84, 77},
{214, 206, 201, 194, 188, 181, 174, 167, 161, 154, 147, 141, 135, 127, 121, 114, 108, 102, 95},
{215, 209, 203, 195, 192, 183, 181, 173, 167, 162, 157, 151, 145, 138, 133, 128, 122, 116, 110},
{217, 210, 205, 198, 195, 188, 184, 179, 174, 169, 163, 158, 152, 147, 142, 137, 131, 126, 121},
{218, 212, 207, 203, 198, 193, 189, 184, 178, 174, 169, 164, 160, 154, 149, 144, 140, 135, 130},
{218, 213, 209, 204, 201, 196, 191, 187, 183, 179, 173, 169, 164, 161, 156, 151, 147, 143, 138}
};

        public static readonly int[,] eastConvTillMediumTextureLowRisk = new int[nRow, nColumn]
            {{231, 226, 161, 126, 92, 57, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{250, 232, 207, 184, 161, 138, 115, 92, 68, 45, 22, 0, 0, 0, 0, 0, 0, 0, 0},
{250, 250, 232, 213, 196, 178, 161, 144, 126, 111, 92, 74, 57, 41, 22, 0, 0, 0, 0},
{250, 250, 245, 232, 216, 203, 189, 175, 161, 147, 133, 119, 106, 92, 78, 64, 50, 36, 22},
{250, 250, 250, 243, 232, 219, 207, 196, 184, 173, 161, 150, 138, 126, 115, 103, 92, 80, 69},
{250, 250, 250, 250, 241, 232, 221, 211, 201, 191, 181, 171, 161, 151, 141, 131, 121, 111, 102},
{250, 250, 250, 250, 250, 241, 232, 222, 213, 204, 196, 187, 178, 170, 161, 152, 144, 135, 126},
{250, 250, 250, 250, 250, 250, 239, 232, 223, 215, 207, 200, 192, 184, 176, 169, 161, 153, 146},
{250, 250, 250, 250, 250, 250, 245, 238, 232, 226, 217, 210, 203, 196, 189, 182, 175, 168, 161},
{250, 250, 250, 250, 250, 250, 250, 244, 238, 232, 226, 218, 212, 207, 199, 193, 186, 180, 174},
{250, 250, 250, 250, 250, 250, 250, 250, 243, 237, 232, 226, 219, 213, 207, 202, 196, 190, 184}
};


        public static readonly int[,] eastConvTillHighClayLowRisk = new int[nRow, nColumn]
{{250, 223, 196, 168, 140, 124, 85, 57, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{250, 224, 206, 187, 169, 150, 132, 113, 95, 75, 58, 39, 21, 0, 0, 0, 0, 0, 0},
{250, 250, 226, 211, 197, 183, 169, 155, 141, 127, 113, 99, 86, 72, 58, 44, 30, 16, 0},
{250, 250, 250, 224, 213, 202, 191, 180, 169, 158, 147, 136, 124, 113, 102, 91, 80, 69, 58},
{250, 250, 250, 235, 224, 215, 206, 197, 187, 178, 169, 160, 150, 141, 132, 124, 113, 104, 95},
{250, 250, 250, 241, 233, 224, 217, 209, 201, 193, 185, 177, 169, 161, 153, 145, 137, 129, 121},
{250, 250, 250, 246, 239, 232, 224, 217, 210, 204, 197, 190, 183, 176, 169, 162, 155, 148, 141},
{250, 250, 250, 250, 244, 238, 232, 224, 218, 212, 206, 200, 194, 187, 181, 175, 169, 163, 157},
{250, 250, 250, 250, 250, 242, 237, 231, 224, 219, 213, 208, 202, 197, 191, 186, 180, 174, 169},
{250, 250, 250, 250, 250, 246, 241, 236, 230, 224, 219, 214, 209, 204, 199, 194, 189, 184, 179},
{250, 250, 250, 250, 250, 250, 244, 239, 235, 230, 224, 220, 215, 211, 206, 201, 197, 192, 187}
};

        public static readonly int[,] eastConvTillHighClayHighRisk = new int[nRow, nColumn]
            {{150, 150, 150, 150, 140, 124, 85, 57, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{150, 150, 150, 150, 150, 150, 132, 113, 95, 75, 58, 39, 21, 0, 0, 0, 0, 0, 0},
{150, 150, 150, 150, 150, 150, 150, 150, 141, 127, 113, 99, 86, 72, 58, 44, 30, 16, 0},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 136, 124, 113, 102, 91, 80, 69, 58},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 141, 132, 124, 113, 104, 95},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 145, 137, 129, 121},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 148, 141},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150}
};

        public static readonly int[,] eastConvTillMediumTextureHighRisk = new int[nRow, nColumn]
            {{150, 150, 150, 126, 92, 57, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{150, 150, 150, 150, 150, 138, 115, 92, 68, 45, 22, 0, 0, 0, 0, 0, 0, 0, 0},
{150, 150, 150, 150, 150, 150, 150, 144, 126, 111, 92, 74, 57, 41, 22, 0, 0, 0, 0},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 147, 133, 119, 106, 92, 78, 64, 50, 36, 22},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 138, 126, 115, 103, 92, 80, 69},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 141, 131, 121, 111, 102},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 144, 135, 126},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 146},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 161},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 174},
{150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 184}
};


        public static readonly int[,] westLongNoTill = new int[nRow, nColumn]
{{150, 125, 100, 80, 60, 30, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{182, 159, 135, 111, 87, 63, 40, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{195, 176, 159, 139, 124, 106, 87, 70, 51, 33, 16, 0, 0, 0, 0, 0, 0, 0, 0},
{201, 187, 173, 159, 144, 130, 116, 101, 87, 73, 60, 44, 30, 16, 0, 0, 0, 0, 0},
{206, 194, 182, 170, 159, 147, 135, 123, 111, 99, 87, 75, 63, 51, 40, 28, 16, 0, 0},
{210, 199, 189, 179, 169, 159, 148, 138, 128, 118, 107, 97, 87, 77, 67, 57, 46, 36, 26},
{212, 203, 194, 186, 176, 167, 159, 150, 141, 132, 123, 114, 105, 96, 87, 78, 69, 60, 51},
{214, 206, 198, 191, 182, 174, 166, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71},
{216, 209, 201, 194, 187, 180, 173, 166, 159, 151, 144, 137, 130, 123, 116, 109, 101, 94, 87},
{217, 210, 204, 197, 191, 184, 178, 172, 165, 158, 152, 145, 139, 133, 126, 120, 113, 107, 100},
{218, 212, 206, 200, 194, 188, 184, 176, 170, 164, 159, 153, 147, 141, 135, 129, 123, 117, 111}
};

        public static readonly int[,] langdonLongNoTill = CommonFunctions.GetNewTable(langdonConvTill, longNotillDiff);

        public static readonly int[,] langdonMinNoTill = CommonFunctions.GetNewTable(langdonConvTill, minNotillDiff);

        public static readonly int[,] centralLongNoTill = CommonFunctions.GetNewTable(centralConvTill, longNotillDiff);

        public static readonly int[,] centralMinNoTill = CommonFunctions.GetNewTable(centralConvTill, minNotillDiff);

        public static readonly int[,] eastMinNoTillMediumTextureLowRisk = CommonFunctions.GetNewTable(eastConvTillMediumTextureLowRisk, minNotillDiff);

        public static readonly int[,] eastMinNoTillHighClayLowRisk = CommonFunctions.GetNewTable(eastConvTillHighClayLowRisk, minNotillDiff);

        public static readonly int[,] eastMinNoTillHighClayHighRisk = CommonFunctions.GetNewTable(eastConvTillHighClayHighRisk, minNotillDiff);

        public static readonly int[,] eastMinNoTillMediumTextureHighRisk = CommonFunctions.GetNewTable(eastConvTillMediumTextureHighRisk, minNotillDiff);

    }
}
